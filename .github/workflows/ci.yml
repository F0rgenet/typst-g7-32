name: Continuous Integration

on:
  push:
    branches:
      - main
    paths:
      - 'template/**'
      - 'src/**'
      - 'assets/utils/**'
      - '.github/workflows/**'
      - 'assets/utils/**'
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y debconf-utils
          echo "ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true" | sudo debconf-set-selections
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y ttf-mscorefonts-installer

      - name: Probe runner package cache
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: cargo
          version: 1.0

      - name: Install tytanic from crates.io
        uses: baptiste0928/cargo-install@v3.0.0
        with:
          crate: tytanic
          version: '0.2.1'
          
      - name: Run test suite
        run: tt run --use-system-fonts

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: artifacts
          path: |
            tests/**/diff/*.png
            tests/**/out/*.png
            tests/**/ref/*.png
          retention-days: 5

  build_preview:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Create temporary directory
        run: mkdir -p preview_assets

      - name: Compile Typst document to PDF
        uses: docker://ghcr.io/typst/typst:latest
        with:
          args: compile --root . tests/default/test.typ preview_assets/main.pdf

      - name: Compile Typst document to PNG
        uses: docker://ghcr.io/typst/typst:latest
        with:
          args: compile --root . tests/default/test.typ preview_assets/preview.png --format png --pages 1 --ppi 300

      - name: Compile source Typst document to PNG
        uses: docker://ghcr.io/typst/typst:latest
        with:
          args: compile --root . ./assets/utils/render-source.typ preview_assets/source.png --format png --pages 1 --ppi 300
      
      - name: Stash preview_assets
        run: |
          git add -f preview_assets/*
          git stash push preview_assets

      - name: Switch to preview branch
        run: |
          git switch --orphan preview

      - name: Unstash and unpack preview_assets
        run: |
          git stash pop
          mv preview_assets/* ./
          git rm -rf preview_assets

      - name: Commit and Push preview files
        run: |
          git add -f *
          git commit -m "Update preview assets"
          git push -f origin preview

  build_test_previews:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(steps.set_matrix.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate matrix for test files
        id: set_matrix
        run: |
          python -c "import json, glob; files = glob.glob('tests/**/test.typ', recursive=True); print(json.dumps({'include': [{'test_file': f} for f in files]}))"

      - name: Create directory for previews
        run: mkdir -p previews

      - name: Compile PDF preview for ${{ matrix.test_file }}
        run: |
          pdf_name=$(basename "${{ matrix.test_file }}" .typ).pdf
          docker run --rm -v "$(pwd)":/workspace ghcr.io/typst/typst:latest compile --root . "${{ matrix.test_file }}" "previews/${pdf_name}"
      
      - name: Upload PDF previews as artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdf-previews
          path: previews/**/*.pdf
          retention-days: 5

      - name: List generated PDFs
        id: listpdfs
        run: |
          echo "Generated PDF previews:" > pdf_list.md
          for f in previews/*.pdf; do
            echo "- $(basename "$f")" >> pdf_list.md
          done
          cat pdf_list.md
          # Сохраняем список для дальнейшего использования в комментарии
          echo "::set-output name=pdf_list::$(cat pdf_list.md)"

      - name: Post PR comment with PDF previews
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            **Сгенерированы PDF-превью для тестов:**
            ${{ steps.listpdfs.outputs.pdf_list }}
            
            PDF-превью доступны в [артефактах сборки](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})